/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Boleta;
import modelo.Categoria;
import modelo.Cliente;
import modelo.DetalleBoleta;
import modelo.FacturaPDF;
import modelo.NombreUsuario;
import modelo.Producto;
import modelo.ProductoDTO;
import modelo.Vendedor;
import modeloDao.BoletaDAO;
import modeloDao.CategoriaDAO;
import modeloDao.ClienteDAO;
import modeloDao.ProductoDao;
import modeloDao.VendedorDAO;

/**
 *
 * @author MGamero
 */
public class Detalle_Boleta extends javax.swing.JFrame {

    /**
     * Creates new form Detalle_Boleta
     */  
    private Map<String, ProductoDTO> mapaProductos = new HashMap<>();

    public Detalle_Boleta() {
        initComponents();
        cargarClientesEnCombo();
        cargarProductosEnCombo();
        camposTabla();
        lblNombreVendedor.setText(NombreUsuario.nombre_Usuario);
        this.setLocationRelativeTo(null);
    }

    private void camposTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Código");
        modelo.addColumn("Producto");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Precio Unitario");
        modelo.addColumn("Descuento (%)");
        modelo.addColumn("Precio Total");
        tablaRegistroVista.setModel(modelo);

    }

    private void cargarClientesEnCombo() {
        ClienteDAO dao = new ClienteDAO();
        List<Cliente> lista = dao.listarClientes();
        cbxClientes.removeAllItems();
        cbxClientes.addItem("seleccionar cliente");
        for (Cliente cli : lista) {
            cbxClientes.addItem(cli.getDni_cli() + " - " + cli.getNom_cli());
        }
    }

    private void actualizarTotal() {
        DefaultTableModel modelo = (DefaultTableModel) tablaRegistroVista.getModel();
        double suma = 0;

        int colPrecioTotal = 5; // Índice de columna Precio Total (empezando en 0)

        for (int i = 0; i < modelo.getRowCount(); i++) {
            String valor = modelo.getValueAt(i, colPrecioTotal).toString();
            // Remover posibles símbolos o espacios y convertir a número
            valor = valor.replace(" ", "").replace("S/", "").replace("$", "").trim();
            try {
                suma += Double.parseDouble(valor);
            } catch (NumberFormatException e) {
                // Ignorar o manejar error si hay formato extraño
            }
        }

        lblTotal.setText(String.format(" S/ %.2f", suma));
    }

    private void cargarProductosEnCombo() {
       
        ProductoDao dao = new ProductoDao();
        List<ProductoDTO> lista = dao.listarProductosConPrecioDescuento();

        mapaProductos.clear();
        cbxProductos.removeAllItems();
        cbxProductos.addItem("Seleccionar Producto");

        for (ProductoDTO p : lista) {
            String texto = p.toString();
            mapaProductos.put(texto, p);
            cbxProductos.addItem(texto);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxClientes = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblNombreVendedor = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbxProductos = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAñadir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistroVista = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Boleta");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 92, -1));

        jLabel2.setText("Cliente");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 40, -1));

        cbxClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(cbxClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 190, 40));

        jLabel3.setText("Vendedor");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        lblNombreVendedor.setText("XXXXXXXXX");
        jPanel2.add(lblNombreVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 130, 30));

        jLabel5.setText("Adicionar ");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 60, 30));

        jPanel2.add(cbxProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 190, 40));

        jLabel6.setText("Cantidad");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 60, 30));
        jPanel2.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 90, 30));

        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });
        jPanel2.add(btnAñadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, -1, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 240, 10));
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        jLabel9.setText("Producto");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 330, 400));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaRegistroVista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jScrollPane1.setViewportView(tablaRegistroVista);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 570, 173));

        jLabel7.setText("Detalle Boleta");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 90, -1));

        jButton1.setText("jButton1");
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-200, 250, -1, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, -1, -1));

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jPanel4.add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, -1, -1));

        jLabel10.setText("Precio total :");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, 80, 20));

        lblTotal.setText("XXXX");
        jPanel4.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 180, 40));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 620, 400));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed

        DefaultTableModel modelo = (DefaultTableModel) tablaRegistroVista.getModel();

        String seleccion = (String) cbxProductos.getSelectedItem();
        String cantidadStr = txtCantidad.getText().trim();

        if (seleccion == null || seleccion.equals("Seleccionar") || cantidadStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione un producto y cantidad válida.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ProductoDTO producto = mapaProductos.get(seleccion);
        if (producto == null) {
            JOptionPane.showMessageDialog(this, "Producto no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int cantidad;
        try {
            cantidad = Integer.parseInt(cantidadStr);
            if (cantidad <= 0) {
                throw new NumberFormatException();
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Cantidad inválida.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        float total = producto.getPrecioConDescuento() * cantidad;

        modelo.addRow(new Object[]{
            producto.getCodigo(),
            producto.getNombre(),
            cantidad,
            String.format("%.2f", producto.getPrecioUnitario()),
            producto.getDescuento() + " %",
            String.format("%.2f", total)
        });

        actualizarTotal();
        txtCantidad.setText("");
        cbxProductos.setSelectedIndex(0);
        txtCantidad.requestFocus();
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        int filaSeleccionada = tablaRegistroVista.getSelectedRow();
        if (filaSeleccionada != -1) {
            DefaultTableModel modelo = (DefaultTableModel) tablaRegistroVista.getModel(); // Obtén el modelo de la tabla
            modelo.removeRow(filaSeleccionada); // Elimina la fila seleccionada del modelo
            actualizarTotal(); // Actualiza el total después de eliminar
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed

        
        String clienteSeleccionado = cbxClientes.getSelectedItem().toString();
        String dniCliente = "";
        java.util.regex.Matcher matcher = java.util.regex.Pattern.compile("^\\s*(\\d{8})").matcher(clienteSeleccionado);
        if (matcher.find()) {
            dniCliente = matcher.group(1);
        } else {
            JOptionPane.showMessageDialog(this, "El formato del cliente seleccionado es incorrecto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        System.out.println("DNI extraído: " + dniCliente);
        
        // Verifica la longitud
        if (dniCliente.length() > 8) { // Cambia 8 por la longitud máxima permitida
            JOptionPane.showMessageDialog(this, "El DNI del cliente es demasiado largo.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Salir del método si el DNI es demasiado largo
        }

        String vendedorSeleccionado = "0001"; // o cbxVendedores.getSelectedItem().toString();

        int codVendedor = Integer.parseInt(vendedorSeleccionado);
        
        System.out.println("vendedor extraído: " + codVendedor);
        System.out.println(NombreUsuario.codigo_Usuario);
        ClienteDAO clienteDAO = new ClienteDAO();
        Cliente clienteObjeto = clienteDAO.obtenerClientePorDNI(dniCliente); // Implementa este método en tu DAO
    if (clienteObjeto == null) {
        JOptionPane.showMessageDialog(this, "Cliente no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
        
        //Cliente clienteObjeto = new Cliente(); // Asegúrate de tener la clase Cliente
        //clienteObjeto.setDni_cli(dniCliente); // O cualquier otro atributo que necesites
        VendedorDAO vendedordao = new VendedorDAO();
        Vendedor vendedorObjeto = new Vendedor(); // Asegúrate de tener la clase Vendedor
        vendedorObjeto.setCod_ven(NombreUsuario.codigo_Usuario);
        vendedorObjeto.setNom_ven(NombreUsuario.nombre_Usuario);
        List<DetalleBoleta> listaDetalles = new ArrayList<>();
        DefaultTableModel modelo = (DefaultTableModel) tablaRegistroVista.getModel();
        
        for (int i = 0; i < modelo.getRowCount(); i++) {
            String codPro = (String) modelo.getValueAt(i, 0);
            String nombrePro = (String) modelo.getValueAt(i, 1);
            int cantidad = Integer.parseInt(modelo.getValueAt(i, 2).toString());
            BigDecimal precioUnitario = new BigDecimal(modelo.getValueAt(i, 3).toString());
            String descuentoStr = modelo.getValueAt(i, 4).toString().replace("%", "").trim();
            double descuento = Double.parseDouble(descuentoStr);
            BigDecimal subtotal = new BigDecimal(modelo.getValueAt(i, 5).toString());

            // Crear objeto DetalleBoleta con datos completos
            DetalleBoleta detalle = new DetalleBoleta(0, codPro, nombrePro, precioUnitario, cantidad, descuento, subtotal);
            listaDetalles.add(detalle);
        }

        // Paso 2: Calcular total
        BigDecimal totalFactura = BigDecimal.ZERO;
        for (DetalleBoleta d : listaDetalles) {
            totalFactura = totalFactura.add(d.getSubtotal());
        }

        // Crear objeto boleta con datos generales (fecha, cliente, vendedor, total)
        Boleta boleta = new Boleta();
        boleta.setFec_bol(new Date());
        boleta.setDni_cli(dniCliente);   // Obtenlo según tu UI
        boleta.setCod_ven(vendedorSeleccionado);  // Igual
        boleta.setTotal_bol(totalFactura);

        // Paso 3 y 4: Guardar en base y generar PDF (usamos tu DAO y PDF generator)
        try {
            BoletaDAO dao = new BoletaDAO();
            dao.guardarBoletaConDetalles(boleta, listaDetalles);
            
             // Formatear num_bol para mostrar en PDF y nombre archivo
        String numBolStr = String.format("%08d", boleta.getNum_bol());
        String nombreArchivo = "factura_" + numBolStr + ".pdf";
        
            FacturaPDF.generarFactura(boleta, clienteObjeto, vendedorObjeto, listaDetalles, nombreArchivo);

            JOptionPane.showMessageDialog(this, "Factura guardada e impresa correctamente.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al procesar la factura: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Detalle_Boleta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Detalle_Boleta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Detalle_Boleta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Detalle_Boleta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Detalle_Boleta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JComboBox<String> cbxClientes;
    private javax.swing.JComboBox<String> cbxProductos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblNombreVendedor;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tablaRegistroVista;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
